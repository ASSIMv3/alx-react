{"version":3,"sources":["../src/detectFiberTags.js"],"names":["getFiber","element","container","global","document","createElement","inst","Tester","React","Component","ReactDOM","createRoot","render","_reactInternals","child","getLazyFiber","LazyComponent","SuspenseWrapper","Suspense","fallback","module","exports","detectFiberTags","Fn","Cls","Ctx","createContext","FwdRef","forwardRef","props","ref","lazy","HostRoot","tag","ClassComponent","Fragment","FunctionalComponent","MemoSFC","memo","MemoClass","HostPortal","createPortal","HostComponent","HostText","Mode","StrictMode","ContextConsumer","Consumer","ContextProvider","Provider","value","ForwardRef","Profiler","id","onRender","Lazy","OffscreenComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { fakeDynamicImport } from '@wojtekmaj/enzyme-adapter-utils';\n\nfunction getFiber(element) {\n  const container = global.document.createElement('div');\n  let inst = null;\n  class Tester extends React.Component {\n    render() {\n      inst = this;\n      return element;\n    }\n  }\n  ReactDOM.createRoot(container).render(React.createElement(Tester));\n  return inst._reactInternals.child;\n}\n\nfunction getLazyFiber(LazyComponent) {\n  const container = global.document.createElement('div');\n  let inst = null;\n\n  class Tester extends React.Component {\n    render() {\n      inst = this;\n      return React.createElement(LazyComponent);\n    }\n  }\n\n  class SuspenseWrapper extends React.Component {\n    render() {\n      return React.createElement(React.Suspense, { fallback: false }, React.createElement(Tester));\n    }\n  }\n  ReactDOM.createRoot(container).render(React.createElement(SuspenseWrapper));\n  return inst._reactInternals.child;\n}\n\nmodule.exports = function detectFiberTags() {\n  function Fn() {\n    return null;\n  }\n  class Cls extends React.Component {\n    render() {\n      return null;\n    }\n  }\n  let Ctx = React.createContext();\n  // React will warn if we don't have both arguments.\n  // eslint-disable-next-line no-unused-vars\n  let FwdRef = React.forwardRef((props, ref) => null);\n  let LazyComponent = React.lazy(() => fakeDynamicImport(() => null));\n\n  return {\n    HostRoot: getFiber('test').return.return.tag, // Go two levels above to find the root\n    ClassComponent: getFiber(React.createElement(Cls)).tag,\n    Fragment: getFiber([['nested']]).tag,\n    FunctionalComponent: getFiber(React.createElement(Fn)).tag,\n    MemoSFC: getFiber(React.createElement(React.memo(Fn))).tag,\n    MemoClass: getFiber(React.createElement(React.memo(Cls))).tag,\n    HostPortal: getFiber(ReactDOM.createPortal(null, global.document.createElement('div'))).tag,\n    HostComponent: getFiber(React.createElement('span')).tag,\n    HostText: getFiber('text').tag,\n    Mode: getFiber(React.createElement(React.StrictMode)).tag,\n    ContextConsumer: getFiber(React.createElement(Ctx.Consumer, null, () => null)).tag,\n    ContextProvider: getFiber(React.createElement(Ctx.Provider, { value: null }, null)).tag,\n    ForwardRef: getFiber(React.createElement(FwdRef)).tag,\n    Profiler: getFiber(\n      React.createElement(React.Profiler, {\n        id: 'mock',\n        onRender() {},\n      }),\n    ).tag,\n    Suspense: getFiber(React.createElement(React.Suspense, { fallback: false })).tag,\n    Lazy: getLazyFiber(LazyComponent).tag,\n    OffscreenComponent: getLazyFiber('div').return.return.tag, // Go two levels above to find the root\n  };\n};\n"],"file":"detectFiberTags.js"}